package UnitTest.Scalar;

message Integers {
    optional int32 opt_int32 = 1;
    required int32 req_int32 = 2;
    repeated int32 rep_int32 = 3;

    optional uint32 opt_uint32 = 4;
    required uint32 req_uint32 = 5;
    repeated uint32 rep_uint32 = 6;

    optional int64 opt_int64 = 7;
    required int64 req_int64 = 8;
    repeated int64 rep_int64 = 9;

    optional uint64 opt_uint64 = 10;
    required uint64 req_uint64 = 11;
    repeated uint64 rep_uint64 = 12;

    optional sint32 opt_sint32 = 13;
    required sint32 req_sint32 = 14;
    repeated sint32 rep_sint32 = 15;

    optional sint64 opt_sint64 = 16;
    required sint64 req_sint64 = 17;
    repeated sint64 rep_sint64 = 18;

    optional fixed32 opt_fixed32 = 19;
    required fixed32 req_fixed32 = 20;
    repeated fixed32 rep_fixed32 = 21;

    optional fixed64 opt_fixed64 = 22;
    required fixed64 req_fixed64 = 23;
    repeated fixed64 rep_fixed64 = 24;

    optional sfixed32 opt_sfixed32 = 25;
    required sfixed32 req_sfixed32 = 26;
    repeated sfixed32 rep_sfixed32 = 27;

    optional sfixed64 opt_sfixed64 = 28;
    required sfixed64 req_sfixed64 = 29;
    repeated sfixed64 rep_sfixed64 = 30;

    optional bool opt_bool = 31;
    required bool req_bool = 32;
    repeated bool rep_bool = 33;
}

message Floats {
    optional float opt_float = 1;
    required float req_float = 2;
    repeated float rep_float = 3;

    optional double opt_double = 4;
    required double req_double = 5;
    repeated double rep_double = 6;
}

message VarLength {
    optional string opt_string = 1;
    required string req_string = 2;
    repeated string rep_string = 3;

    optional bytes opt_bytes = 4;
    required bytes req_bytes = 5;
    repeated bytes rep_bytes = 6;
}

message All {
    optional Integers opt_ints = 1;
    optional Floats opt_floats = 2;
    optional VarLength opt_var_length = 3;

    required Integers req_ints = 4;
    required Floats req_floats = 5;
    required VarLength req_var_length = 6;

    repeated Integers rep_ints = 7;
    repeated Floats rep_floats = 8;
    repeated VarLength rep_var_length = 9;
}
